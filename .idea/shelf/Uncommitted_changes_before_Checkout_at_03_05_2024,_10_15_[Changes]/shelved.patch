Index: src/domain_model/Processors/SuperUserProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package domain_model.Processors;\n\nimport database.Database;\nimport database.UserDB;\nimport user_domain.*;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.Scanner;\nimport java.time.LocalDate;\nimport java.time.Period;\nimport java.util.Scanner;\n\npublic class SuperUserProcessor implements Processor {\n    private Scanner userInput;\n    private ArrayList testDB = new ArrayList<>();\n    private ArrayList<User> userListArr;\n    boolean programRunning = true;\n\n    public SuperUserProcessor() {\n        userInput = new Scanner(System.in);\n    }\n\n    public ArrayList createSuperUser() {\n        ArrayList<SuperUser> superUser = new ArrayList<>();\n        superUser.add(new SuperUser(1, \"flemming\", \"Rasmussen\"));\n        return superUser;\n    }\n\n    public ArrayList CreateandAddMembertoDB() {\n\n        print(\"Indtast fornavne\");\n        String firstNames = userInput.nextLine();\n\n        print(\"indtast efternavne\");\n        String lastNames = userInput.nextLine();\n\n        print(\"Aktiv/passiv\");\n        String activePassiveInput = userInput.nextLine();\n        Boolean isActiveMember = Boolean.parseBoolean(activePassiveInput);\n\n        print(\"Indtast fødselsdato i ÅÅÅÅ-MM-DD\");\n        String birthDate = userInput.nextLine();\n        LocalDate dob = LocalDate.parse(birthDate);\n\n\n        testDB.add(new Member(1, firstNames, lastNames, isActiveMember, true, calculateAge(dob), false));\n\n        return testDB;\n    }\n\n    public ArrayList CreateandAddTrainertoDB() {\n\n        print(\"Indtast fornavne\");\n        String firstNames = userInput.nextLine();\n\n        print(\"indtast efternavne\");\n        String lastNames = userInput.nextLine();\n\n        print(\"Aktiv/passiv\");\n\n        print(\"Indtast fødselsdato i ÅÅÅÅ-MM-DD\");\n        String birthDate = userInput.nextLine();\n        LocalDate dob = LocalDate.parse(birthDate);\n\n//Her skal laves en metode, der tager seneste userID fra DB'en og incrementer den med 1.\n        testDB.add(new Trainer(2, \"lsdfklr1fwdslfææ\", \"Flemming\", \"Rasmussen\", true));\n\n        return testDB;\n    }\n\n    public ArrayList CreateandAddCompetitiveMembertoDB() {\n\n        print(\"Indtast fornavne\");\n        String firstNames = userInput.nextLine();\n\n        print(\"indtast efternavne\");\n        String lastNames = userInput.nextLine();\n\n        print(\"Aktiv/passiv\");\n\n        print(\"Indtast fødselsdato i ÅÅÅÅ-MM-DD\");\n        String birthDate = userInput.nextLine();\n        LocalDate dob = LocalDate.parse(birthDate);\n\n//Her skal laves en metode, der tager seneste userID fra DB'en og incrementer den med 1.\n        testDB.add(new CompetitiveMember(3, \"Susse\", \"Sonnegaard\", true, true, calculateAge(dob), false));\n\n        return testDB;\n    }\n\n    public ArrayList CreateandAddTreasurertoDB() {\n\n        print(\"Indtast fornavne\");\n        String firstNames = userInput.nextLine();\n\n        print(\"indtast efternavne\");\n        String lastNames = userInput.nextLine();\n\n        print(\"Aktiv/passiv\");\n\n        print(\"Indtast fødselsdato i ÅÅÅÅ-MM-DD\");\n        String birthDate = userInput.nextLine();\n        LocalDate dob = LocalDate.parse(birthDate);\n\n//Her skal laves en metode, der tager seneste userID fra DB'en og incrementer den med 1.\n        testDB.add(new Treasurer(4, \"1+23kdsf+2\", \"Steen\", \"Secher\"));\n\n        return testDB;\n    }\n\n    public void editUserFromDB(int idToEdit, String firstName) {\n        User userToEdit = null;\n        String command = userInput.nextLine().toLowerCase();\n\n\n        for (User u : userListArr) {\n            if (u.getUserID() == idToEdit && u.getFirstName() == firstName) {\n                print(\"\"\"\n                        Hvilket parameter vil du ændre?\n                        1. Fornavn(e)\n                        2. Efternavn\n                        3. Aktivitetsstatus\n                        4.???\n                        \"\"\");\n\n                while (programRunning)\n                    switch (command) {\n                        case \"1\" -> {\n                        }\n                        case \"2\" -> {\n                        }\n                        case \"3\" -> {\n                        }\n                        case \"4\" -> {\n                        }\n                        default -> {\n                            print(\"invalid input\");\n                        }\n                    }\n\n\n                u.setFirstName(\"Test\");\n                break;\n            }\n        }\n    }\n\n    public void deleteUserFromDB(int idToEdit, String firstName) {\n        User userToDelete = null;\n        String command = userInput.nextLine().toLowerCase();\n\n        for (User u : userListArr) {\n            if (u.getUserID() == idToEdit && u.getFirstName() == firstName) {\n                //TODO slet fra DB\n            }\n        }\n    }\n\n\n    public Database getUserFromDB(int idToEdit) {\n        //TODO send DB return\n        String command = userInput.nextLine().toLowerCase();\n        print(\"\"\"\n                Hvilket brugeroversigt vil du gerne se?\n                1. Crawl\n                2. Rygcrawl\n                3. Brystsvømning\n                4. Butterfly\n                5. Aktive/Passive medlemmer\n                6. Juniorer/Seniorer\n                \"\"\");\n        while (programRunning)\n            switch (command) {\n                case \"1\" -> {\n                    print(\"Get XYZ-database\");\n                }\n                case \"2\" -> {\n                    print(\"Get XYZ-database\");\n                }\n                case \"3\" -> {\n                    print(\"Get XYZ-database\");\n                }\n                case \"4\" -> {\n                    print(\"Get XYZ-database\");\n                }\n                case \"5\" -> {\n                    print(\"Get XYZ-database\");\n                }\n                case \"6\" -> {\n                    print(\"Get XYZ-database\");\n                }\n                default -> {\n                    print(\"invalid input\");\n                }\n            }\n        return null;\n    }\n\n\n    public static int calculateAge(LocalDate dob) {\n        LocalDate curDate = LocalDate.now();\n\n        if ((dob != null) && (curDate != null)) {\n            return Period.between(dob, curDate).getYears();\n        } else {\n            return 0;\n        }\n    }\n\n    private void print(String s) {\n        print(s);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/domain_model/Processors/SuperUserProcessor.java b/src/domain_model/Processors/SuperUserProcessor.java
--- a/src/domain_model/Processors/SuperUserProcessor.java	
+++ b/src/domain_model/Processors/SuperUserProcessor.java	
@@ -142,12 +142,15 @@
 
                 u.setFirstName("Test");
                 break;
+                //TODO kald editUserDB() fra UserDB-klassen og giv den redigerede user som parametre.
             }
         }
     }
 
     public void deleteUserFromDB(int idToEdit, String firstName) {
         User userToDelete = null;
+
+
         String command = userInput.nextLine().toLowerCase();
 
         for (User u : userListArr) {
