Index: resources/databases/CompetitionDB/StyleDB.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id;userID;competitionID;styleCategory;placement;timeInSeconds\r\n1;2;1;BACKSTROKE;1;123\r\n2;2;2;BACKSTROKE;1;231\r\n3;3;2;BACKSTROKE;1;31
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/resources/databases/CompetitionDB/StyleDB.csv b/resources/databases/CompetitionDB/StyleDB.csv
--- a/resources/databases/CompetitionDB/StyleDB.csv	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/resources/databases/CompetitionDB/StyleDB.csv	(date 1715851278543)
@@ -1,4 +1,1 @@
-id;userID;competitionID;styleCategory;placement;timeInSeconds
-1;2;1;BACKSTROKE;1;123
-2;2;2;BACKSTROKE;1;231
-3;3;2;BACKSTROKE;1;31
\ No newline at end of file
+id;userID;competitionID;styleCategory;placement;timeInSeconds
\ No newline at end of file
Index: resources/databases/CompetitionDB/CompetitionDB.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id;location;date;\r\n1;Hellerup;10/12/2001\r\n2;Birkerød;10/12/2001
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/resources/databases/CompetitionDB/CompetitionDB.csv b/resources/databases/CompetitionDB/CompetitionDB.csv
--- a/resources/databases/CompetitionDB/CompetitionDB.csv	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/resources/databases/CompetitionDB/CompetitionDB.csv	(date 1715851052020)
@@ -1,3 +1,3 @@
-id;location;date;
+id;location;date
 1;Hellerup;10/12/2001
-2;Birkerød;10/12/2001
\ No newline at end of file
+2;Birkerød;10/12/2001
Index: src/domain_model/Processors/TrainerProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package domain_model.Processors;\r\n\r\nimport database.DBController;\r\nimport user_domain.CompetitiveMember;\r\nimport user_domain.Member;\r\nimport user_domain.Trainer;\r\nimport user_domain.User;\r\nimport user_domain.competition.Competition;\r\nimport user_domain.competition.Style;\r\nimport user_domain.competition.StyleCategories;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Comparator;\r\nimport java.util.HashMap;\r\n\r\npublic class TrainerProcessor implements Processor {\r\n\r\n    DBController dbController;\r\n\r\n    public TrainerProcessor(DBController dbController) {\r\n        this.dbController = dbController;\r\n    }\r\n\r\n    public ArrayList<String> getTopFive(StyleCategories styleCategory) {\r\n        ArrayList<Style> tempStyleArr = new ArrayList<>();\r\n        ArrayList<CompetitiveMember> tempCompMemberArr = dbController.getListOfCompetitiveMembers();\r\n        tempCompMemberArr.removeIf(member -> member.getCompetitionList().isEmpty());\r\n\r\n        HashMap<Style, Competition> tempStyleCompMap = new HashMap<>();\r\n\r\n        for (CompetitiveMember member : tempCompMemberArr) {\r\n            for (Competition c : member.getCompetitionList()) {\r\n                for (Style s : c.getStyleList()) {\r\n                    if (s.getStyleCategory() == styleCategory) {\r\n                        tempStyleArr.add(s);\r\n                        tempStyleCompMap.put(s, c);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        tempStyleArr.sort(Comparator.naturalOrder());\r\n        ArrayList<String> topFiveStylesToString = new ArrayList<>();\r\n        ArrayList<Style> topFiveStyles = new ArrayList<>();\r\n        for (Style s : tempStyleArr) {\r\n            boolean isIdenticalUser = false;\r\n            for (Style fs : topFiveStyles) {\r\n                if (fs.getUserID() == s.getUserID()) {\r\n                    isIdenticalUser = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIdenticalUser) {\r\n                User user = dbController.getUserFromID(s.getUserID());\r\n                topFiveStyles.add(s);\r\n                Competition c = tempStyleCompMap.get(s);\r\n                String styleString =\r\n                        user.getFirstName() + \" \" + user.getLastName() + \"\\n\" +\r\n                        \"Stævne: \" + c.getLocation() + \"\\n\" +\r\n                        \"Dato: \" + c.getDate() + \"\\n\" +\r\n                        s.toString();\r\n\r\n                topFiveStylesToString.add(styleString);\r\n\r\n                if (topFiveStyles.size() == 5) {\r\n                    return topFiveStylesToString;\r\n                }\r\n            }\r\n        }\r\n        return topFiveStylesToString;\r\n    }\r\n\r\n    public ArrayList<String> getListOfTeams(Trainer trainer) {\r\n\r\n        ArrayList<CompetitiveMember> tempCompMemberArr = dbController.getListOfCompetitiveMembers();\r\n        if (trainer.isSeniorTrainer()) {\r\n            tempCompMemberArr.removeIf(member -> !(member.isSenior()));\r\n        } else {\r\n            tempCompMemberArr.removeIf(member -> member.isSenior());\r\n        }\r\n            ArrayList<String> finalListOfTeams = new ArrayList<>();\r\n        tempCompMemberArr.forEach(member -> finalListOfTeams.add(member.toString()) );\r\n        return finalListOfTeams;\r\n    }\r\n\r\n    //TODO træner skal kunne oprette stævner.\r\n    //TODO træner skal kunne registrere stævneresultater.\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/domain_model/Processors/TrainerProcessor.java b/src/domain_model/Processors/TrainerProcessor.java
--- a/src/domain_model/Processors/TrainerProcessor.java	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/src/domain_model/Processors/TrainerProcessor.java	(date 1715850875110)
@@ -9,6 +9,7 @@
 import user_domain.competition.Style;
 import user_domain.competition.StyleCategories;
 
+import java.lang.reflect.Array;
 import java.util.ArrayList;
 import java.util.Comparator;
 import java.util.HashMap;
@@ -55,9 +56,9 @@
                 Competition c = tempStyleCompMap.get(s);
                 String styleString =
                         user.getFirstName() + " " + user.getLastName() + "\n" +
-                        "Stævne: " + c.getLocation() + "\n" +
-                        "Dato: " + c.getDate() + "\n" +
-                        s.toString();
+                                "Stævne: " + c.getLocation() + "\n" +
+                                "Dato: " + c.getDate() + "\n" +
+                                s.toString();
 
                 topFiveStylesToString.add(styleString);
 
@@ -77,11 +78,33 @@
         } else {
             tempCompMemberArr.removeIf(member -> member.isSenior());
         }
-            ArrayList<String> finalListOfTeams = new ArrayList<>();
-        tempCompMemberArr.forEach(member -> finalListOfTeams.add(member.toString()) );
+        ArrayList<String> finalListOfTeams = new ArrayList<>();
+        tempCompMemberArr.forEach(member -> finalListOfTeams.add(member.toString()));
         return finalListOfTeams;
     }
 
     //TODO træner skal kunne oprette stævner.
     //TODO træner skal kunne registrere stævneresultater.
+
+    public void addStyleToMember(int indexOfMember, int indexOfCompetetion, StyleCategories styleType,
+                                 long seconds, int placement) {
+        CompetitiveMember thisMemberToEdit = dbController.getListOfCompetitiveMembers().get(indexOfMember);
+        Competition thisCompToAdd = dbController.getListOfCompetitions().get(indexOfCompetetion);
+        Style styleToAdd = new Style(dbController.getIDForNewStyle(), thisMemberToEdit.getUserID(),
+                thisCompToAdd.getID(), styleType, placement, seconds);
+        ArrayList<Competition> thisMembersCompetitionList = thisMemberToEdit.getCompetitionList();
+
+        for (Competition comp : thisMembersCompetitionList) {
+            if (comp.getID() == thisCompToAdd.getID()) {
+                thisMemberToEdit.removeCompetitionFromID(comp.getID());
+                break;
+            }
+        }
+
+        thisCompToAdd.addStyle(styleToAdd);
+        thisMemberToEdit.addCompetition(thisCompToAdd);
+
+
+        dbController.editUserInDB(thisMemberToEdit);
+    }
 }
Index: resources/databases/UserDB/CompetitiveMemberDB.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>id;firstName;lastName;competitionList\r\n2;Laura;Bøjden;[1]\r\n3;Mikkel;Hansen;[2]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/resources/databases/UserDB/CompetitiveMemberDB.csv b/resources/databases/UserDB/CompetitiveMemberDB.csv
--- a/resources/databases/UserDB/CompetitiveMemberDB.csv	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/resources/databases/UserDB/CompetitiveMemberDB.csv	(date 1715851628723)
@@ -1,3 +1,3 @@
 id;firstName;lastName;competitionList
-2;Laura;Bøjden;[1]
+2;Laura;Bøjden;[1, 2]
 3;Mikkel;Hansen;[2]
Index: src/database/userDB/CompetitiveMemberDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database.userDB;\r\n\r\nimport database.Database;\r\nimport database.competition_style_DB.CompetitionDB;\r\nimport database.competition_style_DB.StyleDB;\r\nimport database.rowNameEnum.CompetitionDBRowNames;\r\nimport database.rowNameEnum.CompetitiveMemberDBRowNames;\r\nimport database.rowNameEnum.DBRowNames;\r\nimport database.rowNameEnum.UserDBRowNames;\r\nimport user_domain.CompetitiveMember;\r\nimport user_domain.User;\r\nimport user_domain.competition.Competition;\r\nimport user_domain.competition.Style;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class CompetitiveMemberDB extends Database implements UserReturn {\r\n    private int userIDFromMemberDB;\r\n    private String firstNameFromMemberDB;\r\n    private String lastNameFromMemberDB;\r\n    private boolean isActiveMemberFromMemberDB;\r\n    private final boolean isCompetitiveFromMemberDB;\r\n    private String dateOfBirthFromMemberDB;\r\n    private boolean isArrearsFromMemberDB;\r\n\r\n\r\n\r\n    //userid, firstName, lastName, isActiveMember, true, age, isArrears\r\n\r\n    public CompetitiveMemberDB() {\r\n        super(UserReturn.getFolderPath()+\"CompetitiveMemberDB.csv\");\r\n        //As this DB only gets called when the member is a Competitive member, this boolean is always true. Therefor final\r\n        isCompetitiveFromMemberDB = true;\r\n        userIDFromMemberDB = -1;\r\n        firstNameFromMemberDB = null;\r\n        lastNameFromMemberDB = null;\r\n        isActiveMemberFromMemberDB = false;\r\n        dateOfBirthFromMemberDB = \"\";\r\n        isArrearsFromMemberDB = false;\r\n    }\r\n\r\n    public void setMemberAttributes(int userIDFromMemberDB, String firstNameFromMemberDB, String lastNameFromMemberDB,\r\n                                    boolean isActiveMemberFromMemberDB, String dateOfBirthFromMemberDB, boolean isArrearsFromMemberDB) {\r\n        this.userIDFromMemberDB = userIDFromMemberDB;\r\n        this.firstNameFromMemberDB = firstNameFromMemberDB;\r\n        this.lastNameFromMemberDB = lastNameFromMemberDB;\r\n        this.isActiveMemberFromMemberDB = isActiveMemberFromMemberDB;\r\n        this.dateOfBirthFromMemberDB = dateOfBirthFromMemberDB;\r\n        this.isArrearsFromMemberDB = isArrearsFromMemberDB;\r\n    }\r\n\r\n    @Override\r\n    public DBRowNames[] getEnumRowNames() {\r\n        return CompetitiveMemberDBRowNames.values();\r\n    }\r\n\r\n    @Override\r\n    public User getUserFromID(int id) {\r\n        return searchAndCreateUser(CompetitiveMemberDBRowNames.USER_ID, String.valueOf(id));\r\n    }\r\n\r\n    @Override\r\n    public User getUserFromLastName(String name) {\r\n        return searchAndCreateUser(CompetitiveMemberDBRowNames.LAST_NAME, name);\r\n    }\r\n\r\n    public ArrayList<User> getListOfUsers() {\r\n        return UserReturn.super.getListOfUsers(super.getRows());\r\n    }\r\n\r\n    public User searchAndCreateUser(CompetitiveMemberDBRowNames catToFindBy, String searchValue) {\r\n        //Gets the index number of the column that was wished to be searched for.\r\n        int indexToSearchBy = super.getIndexOfRowName(catToFindBy);\r\n        //Calls the default method in User Return, inserting the rows and index of column to be searched through.\r\n        return UserReturn.super.searchAndCreateUser(searchValue, indexToSearchBy, super.getRows());\r\n    }\r\n\r\n    @Override\r\n    public User createUserFromSingleRow(String[] singleRow) {\r\n        if(userIDFromMemberDB != -1) {\r\n            String compEntriesAsString = singleRow[getIndexOfRowName(CompetitiveMemberDBRowNames.COMPETITION_LIST)];\r\n            compEntriesAsString = compEntriesAsString.substring(1,compEntriesAsString.length()-1);\r\n            String[] compEntries = compEntriesAsString.split(\",\");\r\n            ArrayList<Competition> compList = new ArrayList<>();\r\n\r\n\r\n            if(!(compEntries.length == 1 && compEntries[0].isBlank())) {\r\n                CompetitionDB compDB = new CompetitionDB();\r\n                for (String idAsString : compEntries) {\r\n                    compList.add(compDB.getCompetitionFromID(Integer.parseInt(idAsString), userIDFromMemberDB));\r\n                }\r\n            }\r\n\r\n\r\n            return new CompetitiveMember(userIDFromMemberDB, firstNameFromMemberDB, lastNameFromMemberDB, isActiveMemberFromMemberDB,\r\n                    isCompetitiveFromMemberDB, dateOfBirthFromMemberDB, isArrearsFromMemberDB, compList);\r\n        }\r\n\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public boolean editUserInDB(User user) {\r\n        //Checks of the user instance is indeed an instance of Member.\r\n        if (user instanceof CompetitiveMember compMember) {\r\n            userIDFromMemberDB = compMember.getUserID();\r\n            firstNameFromMemberDB = compMember.getFirstName();\r\n            lastNameFromMemberDB = compMember.getLastName();\r\n            isActiveMemberFromMemberDB = compMember.isActiveMember();\r\n            dateOfBirthFromMemberDB = compMember.getDateOfBirth();\r\n            isArrearsFromMemberDB = compMember.isArrears();\r\n\r\n            //Gets list of all member instances from DB.\r\n            ArrayList<User> allUsers = getListOfUsers();\r\n            //Gets list of all members as formatted DB String from DB.\r\n            ArrayList<String[]> allRows = super.getRows();\r\n            //Creates new String[] array with length corresponding to amount of columns in DB.\r\n            String[] newRow = new String[CompetitiveMemberDBRowNames.values().length];\r\n            //Gets the id, first name, last name as a String;\r\n            newRow[getIndexOfRowName(CompetitiveMemberDBRowNames.USER_ID)] = String.valueOf(compMember.getUserID());\r\n            newRow[getIndexOfRowName(CompetitiveMemberDBRowNames.FIRST_NAME)] = compMember.getFirstName();\r\n            newRow[getIndexOfRowName(CompetitiveMemberDBRowNames.LAST_NAME)] = compMember.getLastName();\r\n            //Gets the activity status, competitive status, age, arrears status and yearly membership fee as Strings.\r\n            ArrayList<Competition> compList = compMember.getCompetitionList();\r\n            ArrayList<Integer> compIDList = new ArrayList<>();\r\n            compList.forEach(comp -> compIDList.add(comp.getID()));\r\n\r\n\r\n\r\n            newRow[getIndexOfRowName(CompetitiveMemberDBRowNames.COMPETITION_LIST)] = compIDList.toString();\r\n\r\n            //Loops through list of member instances.\r\n            for (int i = 0; i < allUsers.size(); i++) {\r\n                //If the userid in allusers equals the member id of the wished edited member,\r\n                // it means we now know the index place of the wished member in the database,\r\n                // and we can now replace this index.\r\n                if (allUsers.get(i).getUserID() == compMember.getUserID()) {\r\n                    //We replace the old member with the new edited member with equal id.\r\n                    allRows.set(i, newRow);\r\n                    break;\r\n                }\r\n            }\r\n            //We insert the edited row into the database.\r\n            if(!insertListToDB(allRows)) {\r\n                return false;\r\n            }\r\n\r\n            if(!compList.isEmpty()) {\r\n                ArrayList<Boolean> compErrorReturns = new ArrayList<>();\r\n                CompetitionDB compDB = new CompetitionDB();\r\n                for (Competition singleComp : compList) {\r\n                    compErrorReturns.add(compDB.editCompInDB(singleComp));\r\n                }\r\n\r\n                return !compErrorReturns.contains(false);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public int getIDForNewUser() {\r\n        return getIDForNewEntry(UserDBRowNames.USER_ID, super.getRows());\r\n    }\r\n\r\n\r\n    public boolean addUserInDB(User user) {\r\n        if(!(user instanceof CompetitiveMember compMember)) {\r\n            return false;\r\n        } else {\r\n            ArrayList<String[]> allRows = getRows();\r\n\r\n            String[] newRow = new String[CompetitiveMemberDBRowNames.values().length];\r\n            newRow[getIndexOfRowName(CompetitiveMemberDBRowNames.USER_ID)] = String.valueOf(compMember.getUserID());\r\n            newRow[getIndexOfRowName(CompetitiveMemberDBRowNames.FIRST_NAME)] = compMember.getFirstName();\r\n            newRow[getIndexOfRowName(CompetitiveMemberDBRowNames.LAST_NAME)] = compMember.getLastName();\r\n\r\n            ArrayList<Competition> compList = compMember.getCompetitionList();\r\n            ArrayList<Integer> compIDList = new ArrayList<>();\r\n            compList.forEach(comp -> compIDList.add(comp.getID()));\r\n\r\n            newRow[getIndexOfRowName(CompetitiveMemberDBRowNames.COMPETITION_LIST)] = compIDList.toString();\r\n\r\n\r\n            allRows.add(newRow);\r\n\r\n            if(!insertListToDB(allRows)) {\r\n                return false;\r\n            }\r\n\r\n            if(!compList.isEmpty()) {\r\n                CompetitionDB compDB = new CompetitionDB();\r\n                for (Competition singleComp : compList) {\r\n                    compDB.addCompetitionToDB(singleComp);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean removeUserFromDB(User user) {\r\n        if(user instanceof CompetitiveMember compMember) {\r\n            ArrayList<String[]> allRows = getRows();\r\n\r\n            for(String[] singleRow : allRows) {\r\n                int userIDFromDB = Integer.parseInt(singleRow[getIndexOfRowName(CompetitiveMemberDBRowNames.USER_ID)]);\r\n                if(userIDFromDB == compMember.getUserID()) {\r\n                    allRows.remove(singleRow);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            ArrayList<Competition> compList = compMember.getCompetitionList();\r\n\r\n            if(!insertListToDB(allRows)) {\r\n                return false;\r\n            }\r\n            StyleDB styleDB = new StyleDB();\r\n            for(Competition comp : compList) {\r\n                for(Style style : comp.getStyleList()) {\r\n                    if(!styleDB.removeStyleFromDB(style)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/database/userDB/CompetitiveMemberDB.java b/src/database/userDB/CompetitiveMemberDB.java
--- a/src/database/userDB/CompetitiveMemberDB.java	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/src/database/userDB/CompetitiveMemberDB.java	(date 1715849898305)
@@ -80,6 +80,7 @@
         if(userIDFromMemberDB != -1) {
             String compEntriesAsString = singleRow[getIndexOfRowName(CompetitiveMemberDBRowNames.COMPETITION_LIST)];
             compEntriesAsString = compEntriesAsString.substring(1,compEntriesAsString.length()-1);
+            compEntriesAsString = compEntriesAsString.replace(" ","");
             String[] compEntries = compEntriesAsString.split(",");
             ArrayList<Competition> compList = new ArrayList<>();
 
Index: src/user_domain/competition/Competition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package user_domain.competition;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\n\r\npublic class Competition {\r\n    private int id;\r\n    private String location;\r\n    private final LocalDate date;\r\n    private ArrayList<Style> styleList;\r\n\r\n    public Competition(int id, String location, String date, ArrayList<Style> styleList) {\r\n        this.id = id;\r\n        this.location = location;\r\n        this.date = LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));\r\n        this.styleList = styleList;\r\n    }\r\n\r\n    public String getLocation() {\r\n        return location;\r\n    }\r\n\r\n    public int getID() {\r\n        return id;\r\n    }\r\n\r\n    public ArrayList<Style> getStyleList() {\r\n        return styleList;\r\n    }\r\n\r\n    public void setLocation(String location) {\r\n        this.location = location;\r\n    }\r\n\r\n    public void setStyleList(ArrayList<Style> styleList) {\r\n        this.styleList = styleList;\r\n    }\r\n\r\n    public String getDate() {\r\n        return date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/user_domain/competition/Competition.java b/src/user_domain/competition/Competition.java
--- a/src/user_domain/competition/Competition.java	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/src/user_domain/competition/Competition.java	(date 1715851347558)
@@ -16,6 +16,13 @@
         this.styleList = styleList;
     }
 
+    public Competition(int id, String location, String date) {
+        this.id = id;
+        this.location = location;
+        this.date = LocalDate.parse(date, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
+        this.styleList = new ArrayList<>();
+    }
+
     public String getLocation() {
         return location;
     }
@@ -28,6 +35,11 @@
         return styleList;
     }
 
+    public void addStyle(Style style) {
+        styleList.add(style);
+
+    }
+
     public void setLocation(String location) {
         this.location = location;
     }
Index: src/database/DBController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database;\r\n\r\nimport database.competition_style_DB.CompetitionDB;\r\nimport database.competition_style_DB.StyleDB;\r\nimport database.userDB.CompetitiveMemberDB;\r\nimport database.userDB.MemberDB;\r\nimport database.userDB.UserDB;\r\nimport user_domain.CompetitiveMember;\r\nimport user_domain.Member;\r\nimport user_domain.User;\r\nimport user_domain.competition.Competition;\r\nimport user_domain.competition.Style;\r\nimport java.util.ArrayList;\r\n\r\npublic class DBController {\r\n\r\n    private UserDB userDB;\r\n    private CompetitionDB compDB;\r\n    private StyleDB styleDB;\r\n    private MemberDB memberDB;\r\n    private CompetitiveMemberDB competitiveMemberDB;\r\n\r\n    public DBController() {\r\n        userDB = new UserDB();\r\n        compDB = new CompetitionDB();\r\n        styleDB = new StyleDB();\r\n        memberDB = new MemberDB();\r\n        competitiveMemberDB = new CompetitiveMemberDB();\r\n    }\r\n\r\n\r\n    //USERDB METHODS\r\n\r\n    /**GET USER FROM PASSWORD'*/\r\n    public User getUserFromPassword(String password) {\r\n        return userDB.getUserFromPassword(password);\r\n    }\r\n\r\n    /**REMOVE USER FROM DB WITH ID. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean removeUserFromDB(int userID) {\r\n        return userDB.removeUserFromDB(userID);\r\n    }\r\n\r\n    /**REMOVE USER FROM DB WITH USER OBJECT. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean removeUserFromDB(User user) {\r\n        return userDB.removeUserFromDB(user);\r\n    }\r\n\r\n    /**ADD USER TO DB WITH USER OBJECT. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean addUserToDB(User user, String password) {\r\n        return userDB.addUserInDB(user, password);\r\n    }\r\n\r\n    /**EDIT USER IN DB WITH USER OBJECT. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean editUserInDB(User user) {\r\n        return userDB.editUserInDB(user);\r\n    }\r\n\r\n    /**GET LIST OF ALL USERS IN DB*/\r\n    public ArrayList<User> getListOfAllUsers() {\r\n        return userDB.getListOfUsers();\r\n    }\r\n\r\n    /**GET USER FROM ID*/\r\n    public User getUserFromID(int userID) {\r\n        return userDB.getUserFromID(userID);\r\n    }\r\n\r\n    /**GET USER FROM LASTNAME*/\r\n    public User getUserFromLastName(String lastName) {\r\n        return userDB.getUserFromLastName(lastName);\r\n    }\r\n\r\n    /**GET AVAILABLE ID FOR NEW USER ENTRY*/\r\n    public int getIDForNewUser() {\r\n        return userDB.getIDForNewUser();\r\n    }\r\n\r\n    //MEMBERDB METHODS\r\n    /**GET LIST OF MEMBERS*/\r\n    public ArrayList<Member> getListOfMembers() {\r\n        ArrayList<Member> memberList = new ArrayList<>();\r\n        memberDB.getListOfUsers().forEach(user -> memberList.add((Member) user));\r\n        return memberList;\r\n    }\r\n\r\n    public ArrayList<CompetitiveMember> getListOfCompetitiveMembers() {\r\n        ArrayList<CompetitiveMember> memberList = new ArrayList<>();\r\n        competitiveMemberDB.getListOfUsers().forEach(user -> memberList.add((CompetitiveMember) user));\r\n        return memberList;\r\n    }\r\n\r\n\r\n    //COMPETITIONDB METHODS\r\n    /**GET LIST OF COMPETITION WITH EMPTY STYLE LIST*/\r\n    public ArrayList<Competition> getListOfCompetitions() {\r\n        return compDB.getListOfCompetitions();\r\n    }\r\n    /**GET LIST OF COMPETITION WITH STYLE LIST FROM COMPETITIVE USER ID*/\r\n    public ArrayList<Competition> getListOfCompetitions(int userID) {\r\n        return compDB.getListOfCompetitions(userID);\r\n    }\r\n\r\n    /**GET COMPETITION FROM ID WITH EMPTY STYLE LIST*/\r\n    public Competition getCompetitionFromID(int competitionID) {\r\n        return compDB.getCompetitionFromID(competitionID);\r\n    }\r\n\r\n    /**GET COMPETITION FROM ID WITH STYLE LIST FROM COMPETITIVE USER ID*/\r\n    public Competition getCompetitionFromID(int competitionID, int userID) {\r\n        return compDB.getCompetitionFromID(competitionID, userID);\r\n    }\r\n\r\n    /**GET COMPETITION FROM LOCATION WITH EMPTY STYLE LIST*/\r\n    public Competition getCompetitionFromLocation(String competitionLocation) {\r\n        return compDB.getCompetitionFromLocation(competitionLocation);\r\n    }\r\n\r\n    /**GET COMPETITION FROM LOCATION WITH STYLE LIST FROM COMPETITIVE USER ID*/\r\n    public Competition getCompetitionFromLocation(String competitionLocation, int userID) {\r\n        return compDB.getCompetitionFromLocation(competitionLocation, userID);\r\n    }\r\n\r\n    /**EDIT COMPETITION IN DB. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean editCompInDB(Competition comp) {\r\n        return compDB.editCompInDB(comp);\r\n    }\r\n\r\n    /**GET AVAILABLE ID FOR NEW COMPETITION ENTRY*/\r\n    public int getIDForNewCompetition() {\r\n        return compDB.getIDForNewCompetition();\r\n    }\r\n\r\n    /**ADD COMPETITION TO DB. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean addCompToDB(Competition comp) {\r\n        return compDB.addCompetitionToDB(comp);\r\n    }\r\n\r\n    /**REMOVE COMPETITION TO DB FROM ID. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean removeCompFromDB(int competitionID) {\r\n        return compDB.removeCompFromDB(competitionID);\r\n    }\r\n    /**REMOVE COMPETITION TO DB FROM COMPETITION OBJECT. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean removeCompFromDB(Competition comp) {\r\n        return compDB.removeCompFromDB(comp);\r\n    }\r\n\r\n    //STYLEDB METHODS\r\n    /**GET STYLE FROM STYLE ID*/\r\n    public Style getStyleFromID(int styleID) {\r\n        return styleDB.getStyleFromID(styleID);\r\n    }\r\n\r\n    /**EDIT STYLE IN DB. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean editStyleInDB(Style style) {\r\n        return styleDB.editStyleInDB(style);\r\n    }\r\n\r\n    /**GET list of styles from competition and user id*/\r\n    public ArrayList<Style> getUserCompetitionStyles(int competitionID, int userID) {\r\n        return styleDB.getUserCompetitionStyles(competitionID, userID);\r\n    }\r\n\r\n    /**GET ID FOR NEW STYLE ENTRY*/\r\n    public int getIDForNewStyle() {\r\n        return styleDB.getIDForNewStyle();\r\n    }\r\n\r\n    /**ADD STYLE TO DB. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean addStyleToDB(Style style) {\r\n        return styleDB.addStyleToDB(style);\r\n    }\r\n\r\n    /**REMOVE STYLE FROM DB FROM ID. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean removeStyleFromDB(int styleID) {\r\n        return styleDB.removeStyleFromDB(styleID);\r\n    }\r\n    /**REMOVE STYLE FROM DB FROM STYLE OBJECT. RETURNS TRUE IF SUCCESSFUL*/\r\n    public boolean removeStyleFromDB(Style style) {\r\n        return styleDB.removeStyleFromDB(style);\r\n    }\r\n    public String getPasswordFromID(int idInput) {\r\n        return userDB.getPasswordFromID(idInput);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/database/DBController.java b/src/database/DBController.java
--- a/src/database/DBController.java	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/src/database/DBController.java	(date 1715849200967)
@@ -86,8 +86,14 @@
 
     public ArrayList<CompetitiveMember> getListOfCompetitiveMembers() {
         ArrayList<CompetitiveMember> memberList = new ArrayList<>();
-        competitiveMemberDB.getListOfUsers().forEach(user -> memberList.add((CompetitiveMember) user));
+        memberDB.getListOfUsers().forEach(member -> {
+            if(((Member) member) instanceof CompetitiveMember) {
+                memberList.add((CompetitiveMember) member);
+            }
+        });
+
         return memberList;
+
     }
 
 
Index: src/database/competition_style_DB/StyleDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database.competition_style_DB;\r\n\r\nimport database.Database;\r\nimport database.rowNameEnum.DBRowNames;\r\nimport database.rowNameEnum.StyleDBRowNames;\r\nimport user_domain.competition.Style;\r\nimport user_domain.competition.StyleCategories;\r\n\r\nimport java.io.File;\r\nimport java.util.ArrayList;\r\n\r\npublic class StyleDB extends Database {\r\n\r\n    public StyleDB() {\r\n        super(\"CompetitionDB\" + File.separator + \"StyleDB.csv\");\r\n    }\r\n\r\n    @Override\r\n    public DBRowNames[] getEnumRowNames() {\r\n        return StyleDBRowNames.values();\r\n    }\r\n\r\n    public Style getStyleFromID(int styleIDToEdit) {\r\n        ArrayList<String[]> allRows = getRows();\r\n\r\n        for (String[] singleRow : allRows) {\r\n            int styleID = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_ID)]);\r\n            if (styleIDToEdit == styleID) {\r\n                StyleCategories styleCategory = StyleCategories.valueOf(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_CATEGORY)]);\r\n                int stylePlacement = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_PLACEMENT)]);\r\n                long timeInSeconds = Long.parseLong(singleRow[getIndexOfRowName(StyleDBRowNames.TIME_IN_SECONDS)]);\r\n                int userID = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.USER_ID)]);\r\n                int competitionID = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.COMPETITION_ID)]);\r\n\r\n                return new Style(styleID, userID, competitionID, styleCategory, stylePlacement, timeInSeconds);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public boolean editStyleInDB(Style styleToEdit) {\r\n        int styleID = styleToEdit.getID();\r\n        ArrayList<String[]> allRows = getRows();\r\n        for (String[] singleRow : allRows) {\r\n            int styleIDFromDB = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_ID)]);\r\n            if (styleIDFromDB == styleID) {\r\n                singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_CATEGORY)] = styleToEdit.getStyleCategory().name();\r\n                singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_PLACEMENT)] = String.valueOf(styleToEdit.getPlacement());\r\n                singleRow[getIndexOfRowName(StyleDBRowNames.TIME_IN_SECONDS)] = String.valueOf(styleToEdit.getTime().getDurationInSeconds());\r\n                singleRow[getIndexOfRowName(StyleDBRowNames.USER_ID)] = String.valueOf(styleToEdit.getUserID());\r\n                singleRow[getIndexOfRowName(StyleDBRowNames.COMPETITION_ID)] = String.valueOf(styleToEdit.getCompetitionID());\r\n                return super.insertListToDB(allRows);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    public ArrayList<Style> getUserCompetitionStyles(int competitionID, int userID) {\r\n        int competitionIDIndex = getIndexOfRowName(StyleDBRowNames.COMPETITION_ID);\r\n        int userIDIndex = getIndexOfRowName(StyleDBRowNames.USER_ID);\r\n        ArrayList<String[]> allRowsFromDB = super.getRows();\r\n        ArrayList<Style> styles = new ArrayList<>();\r\n        for (String[] singleRow : allRowsFromDB) {\r\n            int userIDFromDB = Integer.parseInt(singleRow[userIDIndex]);\r\n            int competitionIDFromDB = Integer.parseInt(singleRow[competitionIDIndex]);\r\n            if (competitionIDFromDB == competitionID && userIDFromDB == userID) {\r\n                int styleID = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_ID)]);\r\n                StyleCategories styleCategory = StyleCategories.valueOf(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_CATEGORY)]);\r\n                int stylePlacement = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_PLACEMENT)]);\r\n                long timeInSeconds = Long.parseLong(singleRow[getIndexOfRowName(StyleDBRowNames.TIME_IN_SECONDS)]);\r\n\r\n                styles.add(new Style(styleID, userIDFromDB, competitionID, styleCategory, stylePlacement, timeInSeconds));\r\n            }\r\n        }\r\n\r\n        if (styles.isEmpty()) {\r\n            return null;\r\n        } else {\r\n            return styles;\r\n        }\r\n    }\r\n\r\n    public ArrayList<String> getStyleList() {\r\n        ArrayList<String[]> allRowsFromDB = super.getRows();\r\n        ArrayList<String> styles = new ArrayList<>();\r\n        for (String[] singleRow : allRowsFromDB) {\r\n\r\n            String styleName = singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_CATEGORY)];\r\n            int stylePlacement = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_PLACEMENT)]);\r\n            long timeInSeconds = Long.parseLong(singleRow[getIndexOfRowName(StyleDBRowNames.TIME_IN_SECONDS)]);\r\n            int userIDIndex = getIndexOfRowName(StyleDBRowNames.USER_ID);\r\n\r\n            styles.add(styleName);\r\n            styles.add(String.valueOf(stylePlacement));\r\n            styles.add(String.valueOf(timeInSeconds));\r\n            styles.add(String.valueOf(userIDIndex));\r\n        }\r\n\r\n        if (styles.isEmpty()) {\r\n            return null;\r\n        } else {\r\n            return styles;\r\n        }\r\n    }\r\n\r\n\r\n    public int getIDForNewStyle() {\r\n        return getIDForNewEntry(StyleDBRowNames.STYLE_ID, super.getRows());\r\n    }\r\n\r\n    public boolean addStyleToDB(Style styleToAdd) {\r\n        int styleID = styleToAdd.getID();\r\n        if (styleID != getIDForNewStyle()) {\r\n            return false;\r\n        } else {\r\n            ArrayList<String[]> allRows = getRows();\r\n            String[] newRow = new String[StyleDBRowNames.values().length];\r\n            newRow[getIndexOfRowName(StyleDBRowNames.STYLE_ID)] = String.valueOf(styleToAdd.getID());\r\n            newRow[getIndexOfRowName(StyleDBRowNames.STYLE_CATEGORY)] = styleToAdd.getStyleCategory().name();\r\n            newRow[getIndexOfRowName(StyleDBRowNames.STYLE_PLACEMENT)] = String.valueOf(styleToAdd.getPlacement());\r\n            newRow[getIndexOfRowName(StyleDBRowNames.TIME_IN_SECONDS)] = String.valueOf(styleToAdd.getTime().getDurationInSeconds());\r\n            newRow[getIndexOfRowName(StyleDBRowNames.USER_ID)] = String.valueOf(styleToAdd.getUserID());\r\n            newRow[getIndexOfRowName(StyleDBRowNames.COMPETITION_ID)] = String.valueOf(styleToAdd.getCompetitionID());\r\n            allRows.add(newRow);\r\n            return super.insertListToDB(allRows);\r\n        }\r\n\r\n    }\r\n\r\n    public boolean removeStyleFromDB(int id) {\r\n        int styleID = id;\r\n        ArrayList<String[]> allRows = getRows();\r\n        for (String[] singleRow : allRows) {\r\n            int styleIDFromDB = Integer.parseInt(singleRow[getIndexOfRowName(StyleDBRowNames.STYLE_ID)]);\r\n            if (styleIDFromDB == styleID) {\r\n                allRows.remove(singleRow);\r\n                return super.insertListToDB(allRows);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public boolean removeStyleFromDB(Style style) {\r\n        return removeStyleFromDB(style.getID());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/database/competition_style_DB/StyleDB.java b/src/database/competition_style_DB/StyleDB.java
--- a/src/database/competition_style_DB/StyleDB.java	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/src/database/competition_style_DB/StyleDB.java	(date 1715850974601)
@@ -51,9 +51,9 @@
                 singleRow[getIndexOfRowName(StyleDBRowNames.USER_ID)] = String.valueOf(styleToEdit.getUserID());
                 singleRow[getIndexOfRowName(StyleDBRowNames.COMPETITION_ID)] = String.valueOf(styleToEdit.getCompetitionID());
                 return super.insertListToDB(allRows);
+
             }
         }
-
         return false;
     }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"05948840-9df0-4e86-a63a-cdd638f9b919\" name=\"Changes\" comment=\"Made it so you can see the competition a top 5 was made.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_03_05_2024__10_15__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_03_05_2024__10_15__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2024__10_00__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2024__10_00__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_05_2024__12_54__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_05_2024__12_54__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14_05_2024__13_55__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14_05_2024__13_55__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/database/DBController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/database/DBController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/domain_model/userInterface/MemberInterface/TrainerInterface.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/domain_model/userInterface/MemberInterface/TrainerInterface.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Noah8282&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Malthe-kea/TeamCanvasDelfin.git&quot;,\r\n    &quot;accountId&quot;: &quot;ff92d121-2d01-4191-9b2f-515e0f38f5e9&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2gP4mbDgwo4EpaHgs20Pyo1fxOI\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.TreasurerProcessorTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.notifications&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"TeamCanvasDelfin\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"05948840-9df0-4e86-a63a-cdd638f9b919\" name=\"Changes\" comment=\"\" />\r\n      <created>1715584043587</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1715584043587</updated>\r\n      <workItem from=\"1715584045905\" duration=\"1258000\" />\r\n      <workItem from=\"1715586044001\" duration=\"53000\" />\r\n      <workItem from=\"1715586108891\" duration=\"105000\" />\r\n      <workItem from=\"1715586217812\" duration=\"4355000\" />\r\n      <workItem from=\"1715590600760\" duration=\"3344000\" />\r\n      <workItem from=\"1715684073502\" duration=\"837000\" />\r\n      <workItem from=\"1715684926726\" duration=\"3471000\" />\r\n      <workItem from=\"1715688416486\" duration=\"1519000\" />\r\n      <workItem from=\"1715689959430\" duration=\"34000\" />\r\n      <workItem from=\"1715689995916\" duration=\"97000\" />\r\n      <workItem from=\"1715690332459\" duration=\"97000\" />\r\n      <workItem from=\"1715690513763\" duration=\"400000\" />\r\n      <workItem from=\"1715690932989\" duration=\"94000\" />\r\n      <workItem from=\"1715691029267\" duration=\"100000\" />\r\n      <workItem from=\"1715691143350\" duration=\"156000\" />\r\n      <workItem from=\"1715756623396\" duration=\"519000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Removed Esra Userinterface\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715586491686</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715586491686</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"TODO's lavet i main. SuperUser edit er lavet.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715593941992</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715593941992</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Fixed bug with COmpetitionList conversion from String to Int. Implemented Yes/No Button in UI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715687514944</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715687514944</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Editing menu now shows different edit options. Also password menu works\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715704320312</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715704320312</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Made interface for all classes. Finished superuser interface.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715718217221</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715718217221</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Competitive member merge\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715757470074</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715757470074</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"getTopFive() tilføjet til TrainerProcessor\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715762579018</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715762579018</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Made it so you can see the competition a top 5 was made.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715775717939</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715775717939</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Merge of Unit Tests and Interface\" />\r\n    <MESSAGE value=\"Removed Esra Userinterface\" />\r\n    <MESSAGE value=\"TODO's lavet i main. SuperUser edit er lavet.\" />\r\n    <MESSAGE value=\"Fixed bug with COmpetitionList conversion from String to Int. Implemented Yes/No Button in UI\" />\r\n    <MESSAGE value=\"Editing menu now shows different edit options. Also password menu works\" />\r\n    <MESSAGE value=\"Made interface for all classes. Finished superuser interface.\" />\r\n    <MESSAGE value=\"OK\" />\r\n    <MESSAGE value=\"Competitive member merge\" />\r\n    <MESSAGE value=\"Jaa fed\" />\r\n    <MESSAGE value=\"getTopFive() tilføjet til TrainerProcessor\" />\r\n    <MESSAGE value=\"Made it so you can see the competition a top 5 was made.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Made it so you can see the competition a top 5 was made.\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/.idea/workspace.xml	(date 1715851624528)
@@ -10,9 +10,16 @@
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_05_2024__12_54__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_13_05_2024__12_54__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14_05_2024__13_55__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14_05_2024__13_55__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/resources/databases/CompetitionDB/CompetitionDB.csv" beforeDir="false" afterPath="$PROJECT_DIR$/resources/databases/CompetitionDB/CompetitionDB.csv" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/resources/databases/CompetitionDB/StyleDB.csv" beforeDir="false" afterPath="$PROJECT_DIR$/resources/databases/CompetitionDB/StyleDB.csv" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/resources/databases/UserDB/CompetitiveMemberDB.csv" beforeDir="false" afterPath="$PROJECT_DIR$/resources/databases/UserDB/CompetitiveMemberDB.csv" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/database/DBController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/database/DBController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/domain_model/userInterface/MemberInterface/TrainerInterface.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/domain_model/userInterface/MemberInterface/TrainerInterface.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/database/competition_style_DB/CompetitionDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/database/competition_style_DB/CompetitionDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/database/competition_style_DB/StyleDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/database/competition_style_DB/StyleDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/database/userDB/CompetitiveMemberDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/database/userDB/CompetitiveMemberDB.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/domain_model/Processors/TrainerProcessor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/domain_model/Processors/TrainerProcessor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/user_domain/competition/Competition.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/user_domain/competition/Competition.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -47,6 +54,9 @@
     &quot;accountId&quot;: &quot;ff92d121-2d01-4191-9b2f-515e0f38f5e9&quot;
   }
 }</component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/src/domain_model/Processors/TrainerProcessor.java" root0="SKIP_INSPECTION" />
+  </component>
   <component name="ProblemsViewState">
     <option name="selectedTabId" value="CurrentFile" />
   </component>
@@ -60,28 +70,28 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.TreasurerProcessorTest.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.notifications&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.Main.executor": "Run",
+    "JUnit.TreasurerProcessorTest.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "main",
+    "ignore.virus.scanning.warn.message": "true",
+    "kotlin-language-version-configured": "true",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Project",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "reference.settings.ide.settings.notifications",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Main" />
@@ -222,6 +232,22 @@
     <MESSAGE value="getTopFive() tilføjet til TrainerProcessor" />
     <MESSAGE value="Made it so you can see the competition a top 5 was made." />
     <option name="LAST_COMMIT_MESSAGE" value="Made it so you can see the competition a top 5 was made." />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/database/competition_style_DB/CompetitionDB.java</url>
+          <line>123</line>
+          <option name="timeStamp" value="11" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/database/userDB/CompetitiveMemberDB.java</url>
+          <line>87</line>
+          <option name="timeStamp" value="12" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import database.DBController;\r\nimport domain_model.Processors.TrainerProcessor;\r\nimport domain_model.userInterface.UserInterface;\r\nimport user_domain.Member;\r\nimport user_domain.competition.StyleCategories;\r\n\r\nimport java.time.LocalDate;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n\r\n//        TrainerProcessor trainerProcessor = new TrainerProcessor(new DBController());\r\n//        System.out.println(trainerProcessor.getTopFive(StyleCategories.BACKSTROKE).toString());\r\n\r\n\r\n        DBController dbController = new DBController();\r\n\r\n\r\n        for (Member member : dbController.getListOfMembers()) {\r\n            System.out.println(member.toString());\r\n        }\r\n\r\n        UserInterface UI = new UserInterface();\r\n        UI.startProgram();\r\n\r\n        /*TODO\r\n            1. SuperUserProcessor editMember skal laves og opsættes til UI. - X\r\n            2. SuperUserProcessor Brugeroversigt skal fixes med bug hvor kun superuser vises. - X\r\n            3. toString metoder for alle brugertyper skal laves. De skal kalde deres parent class toString,\r\n            og blot bygges videre på denne. - X\r\n            4. MemberProcessor skal laves. Ved metoder hvor der vises data, returnér ArrayList<String>\r\n            5. TrainerProcessor skal laves. Ved metoder hvor der vises data, returnér ArrayList<String>\r\n            6. KassérProcessor skal laves. Ved metoder hvor der vises data, returnér ArrayList<String> - X\r\n            7. Member, Trainer og Kassér processor metoder skal tilføjes til Controller.\r\n            8. UI skal have en cancel button ved login siden, som lukker programmet. - X\r\n            9. UI skal have \"Ja/Nej\" knapper istedet for input text. - X\r\n            10. REFACTORING NÅR OVENSTÅENDE ER DONE.\r\n            11. Læg overstående i Trello\r\n        */\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n//    static void printCompetitiveMember(CompetitiveMember member) {\r\n//        System.out.println(member.getUserID());\r\n//        System.out.println(member.getFirstName());\r\n//        System.out.println(member.getLastName());\r\n//        System.out.println(member.getAge());\r\n//        System.out.println(member.isActiveMember());\r\n//        System.out.println(member.isArrears());\r\n//        System.out.println(member.isCompetitive());\r\n//        System.out.println(member.getYearlyMembershipFee());\r\n//        for (Competition comp : member.getCompetitionList()) {\r\n//            System.out.println(comp.getID());\r\n//            System.out.println(comp.getLocation());\r\n//            for (Style style : comp.getStyleList()) {\r\n//                System.out.println(style.getStyleName());\r\n//                System.out.println(style.getPlacement());\r\n//                System.out.println(style.getTime().getDisplayTime());\r\n//            }\r\n//        }\r\n//    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision a56a92bc2ac481064807c7134a47c2cd6404cd6b)
+++ b/src/Main.java	(date 1715849931382)
@@ -1,9 +1,13 @@
 import database.DBController;
 import domain_model.Processors.TrainerProcessor;
 import domain_model.userInterface.UserInterface;
+import user_domain.CompetitiveMember;
 import user_domain.Member;
+import user_domain.competition.Competition;
+import user_domain.competition.Style;
 import user_domain.competition.StyleCategories;
 
+import java.security.spec.RSAOtherPrimeInfo;
 import java.time.LocalDate;
 
 public class Main {
@@ -14,14 +18,18 @@
 
 
         DBController dbController = new DBController();
+        TrainerProcessor tP = new TrainerProcessor(dbController);
+
+        tP.addStyleToMember(0, 1, StyleCategories.BACKSTROKE, 500, 1);
 
+        CompetitiveMember member = ((CompetitiveMember)dbController.getUserFromID(2));
 
-        for (Member member : dbController.getListOfMembers()) {
-            System.out.println(member.toString());
+        for (Competition comp : member.getCompetitionList()) {
+            for(Style style : comp.getStyleList()) {
+                System.out.println(comp.getLocation());
+                System.out.println(style.toString());
+            }
         }
-
-        UserInterface UI = new UserInterface();
-        UI.startProgram();
 
         /*TODO
             1. SuperUserProcessor editMember skal laves og opsættes til UI. - X
